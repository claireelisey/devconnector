{"ast":null,"code":"import _objectSpread from \"/Users/claireouellette/Desktop/2_Development/devconnector/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/claireouellette/Desktop/2_Development/devconnector/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/claireouellette/Desktop/2_Development/devconnector/client/src/components/auth/Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Paswords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  }; // Redirect if registered\n\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \" Create Your Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e)\n    /* required */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e)\n    /* required */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e)\n    /* minLength='6' */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e)\n    /* minLength='6' */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Sign In\")));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/Users/claireouellette/Desktop/2_Development/devconnector/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","setAlert","register","PropTypes","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n\tconst [formData, setFormData] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpassword2: ''\n\t});\n\n\tconst { name, email, password, password2 } = formData;\n\n\tconst onChange = e =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst onSubmit = async e => {\n\t\te.preventDefault();\n\t\tif (password !== password2) {\n\t\t\tsetAlert('Paswords do not match', 'danger');\n\t\t} else {\n\t\t\tregister({ name, email, password });\n\t\t}\n\t};\n\n\t// Redirect if registered\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/dashboard' />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className='large text-primary'>Sign Up</h1>\n\t\t\t<p className='lead'>\n\t\t\t\t<i className='fas fa-user' /> Create Your Account\n\t\t\t</p>\n\t\t\t<form className='form' onSubmit={e => onSubmit(e)}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t/* required */\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Email Address'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t/* required */\n\t\t\t\t\t/>\n\t\t\t\t\t<small className='form-text'>\n\t\t\t\t\t\tThis site uses Gravatar so if you want a profile image,\n\t\t\t\t\t\tuse a Gravatar email\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t/* minLength='6' */\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\tname='password2'\n\t\t\t\t\t\tvalue={password2}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t/* minLength='6' */\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tclassName='btn btn-primary'\n\t\t\t\t\tvalue='Register'\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<p className='my-1'>\n\t\t\t\tAlready have an account? <Link to='/login'>Sign In</Link>\n\t\t\t</p>\n\t\t</Fragment>\n\t);\n};\n\nRegister.propTypes = {\n\tsetAlert: PropTypes.func.isRequired,\n\tregister: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n\tisAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ setAlert, register }\n)(Register);\n"]},"metadata":{},"sourceType":"module"}