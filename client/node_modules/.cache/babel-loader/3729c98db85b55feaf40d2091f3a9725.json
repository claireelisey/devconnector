{"ast":null,"code":"var _jsxFileName = \"/Users/claireouellette/Desktop/2_Development/devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"test\");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/claireouellette/Desktop/2_Development/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAClBD,EAAAA,iBADkB;AAElBE,EAAAA,IAFkB;AAGlBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHS,CAAD,KAIZ;AACLR,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAKA,CAdD;;AAgBAF,SAAS,CAACI,SAAV,GAAsB;AACrBL,EAAAA,iBAAiB,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADb;AAErBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFF;AAGrBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHL,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADqB;AAEjCC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFkB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CACrBW,eADqB,EAErB;AAAET,EAAAA;AAAF,CAFqB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n\tgetCurrentProfile,\n\tauth,\n\tprofile: { profile, loading }\n}) => {\n\tuseEffect(() => {\n\t\tgetCurrentProfile();\n\t}, []);\n\n\treturn loading && profile === null ? (\n\t\t<Spinner />\n\t) : (\n\t\t<Fragment>test</Fragment>\n\t);\n};\n\nDashboard.propTypes = {\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tprofile: state.profile\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ getCurrentProfile }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}